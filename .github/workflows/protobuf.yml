name: Weekly Protobuf Update Check

on:
  schedule:
    # This will run once a week at 00:00 UTC on Mondays
    - cron: '0 0 * * MON'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get latest release
      id: latest-release
      run: |
        LATEST_RELEASE=$(curl --silent "https://api.github.com/repos/esphome/aioesphomeapi/releases/latest" | jq -r .tag_name)
        echo "::set-output name=release::${LATEST_RELEASE}"

    - name: Check if release has changed
      id: release-check
      run: |
        echo "::set-output name=changed::false"
        if [[ -f protos/.latest-release && "${{ steps.latest-release.outputs.release }}" != "$(cat protos/.latest-release)" ]]; then
          echo "${{ steps.latest-release.outputs.release }}" > protos/.latest-release
          echo "::set-output name=changed::true"
        fi

    - name: Setup Node.js environment
      if: steps.release-check.outputs.changed == 'true'
      uses: actions/setup-node@v2
      with:
        node-version: '16'
      
    - name: Cache Node.js modules
      if: steps.release-check.outputs.changed == 'true'
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
    
    - name: Install Dependencies
      if: steps.release-check.outputs.changed == 'true'
      run: npm ci

    - name: Download protobufs and build
      if: steps.release-check.outputs.changed == 'true'
      run: |
        npm run download
        npm run protoc
        npm run build
      
    - name: Check for changes
      id: git-check
      if: steps.release-check.outputs.changed == 'true'
      run: |
        git diff --exit-code || echo "::set-output name=changed::true"
        
    - name: Commit and push
      if: steps.git-check.outputs.changed == 'true'
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Action"
        git add -A
        git commit -m "Automated protobuf update and build based on new aioesphomeapi release ${{ steps.latest-release.outputs.release }}"
        git push
